---

- name: ansible-securehost | freeipa-client | retreive masters ip
  setup:
  register: ipamasterssetup
  delegate_facts: true
  delegate_to: "{{ groups[idm_group][0] }}" # TODO concat all masters IPs

- name: ansible-securehost | freeipa-client | debug masters ip
  debug:
    msg: "{{ ipamasterssetup }}"
    verbosity: 2

- name: ansible-securehost | freeipa-client | create resolved.conf.d directory
  become: true
  file:
    state: directory
    dest: '/etc/systemd/resolved.conf.d'
    mode: "0755"

- name: ansible-securehost | freeipa-client | add dns reference in resolv.conf
  template:
    src: dns_servers.conf.j2
    dest: "/etc/systemd/resolved.conf.d/dns_servers.conf"
    owner: root
    group: root
    mode: 0644
  become: true

- name: ansible-securehost | freeipa-client | restarts systemd-resolved
  service:
    name: systemd-resolved
    state: restarted
  changed_when: false
  become: true

- name: ansible-securehost | freeipa-client | Debug idm groups variable
  ansible.builtin.debug:
    msg: "{{ groups[idm_group] }}"
    verbosity: 2

- name: ansible-securehost | freeipa-client | compute client hostname
  ansible.builtin.debug:
    msg: "{{ hostname | default(securehost_current_hostname.stdout if securehost_current_hostname.stdout.endswith(company_domain) else idm_client_default_domain_prefix + '.' + company_domain) }}"
  register: securehost_freeipa_client_serverhost

- name: ansible-securehost | freeipa-client | retreive current machine ip
  setup:
  register: idm_host_facts
  delegate_to: "{{ groups[idm_group][0] }}"
  delegate_facts: true

- name: ansible-securehost | freeipa-client | compute ip if preferred_nic is not set
  ansible.builtin.debug:
    msg: "{{ idm_host_facts.ansible_facts['ansible_' + preferred_nic].ipv4.address if preferred_nic is defined else idm_host_facts.ansible_facts.ansible_default_ipv4.address | default(idm_host_facts.ansible_facts.ansible_all_ipv4_addresses[0]) }}"
  register: idm_host_ip

- name: ansible-securehost | freeipa-client | add master hostname entry in client etc/hosts
  ansible.builtin.include_role:
    name: tcharl.ansible_nameserver
  vars:
    hostname: "{{ securehost_freeipa_client_serverhost.msg }}"
    hostname_reboot: false
    ansible_become: true
    skip_ipa: True
    hosts_entries:
      - name: "{{ groups[idm_group][0] | default(idm_server_default_domain_prefix + '.' + company_domain) }}"
        ip: "{{ idm_host_ip.msg | ansible.netcommon.ipv4 }}"


##### Commands for testing
#### kinit admin
### ipa user-find
### ipa user-add yume --first=yume --last=sensei --email=yume@senzei.io  --shell=/bin/bash --password
