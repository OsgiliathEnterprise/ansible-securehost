---
dependency:
  name: galaxy
  enabled: ${DEPENDENCY_ENABLED:-True}
  options:
    role-file: ${REQUIREMENTS_PATH:-requirements-standalone.yml}
    roles-path: ${MOLECULE_PROJECT_DIRECTORY}/../community
    requirements-file: requirements-collections.yml
    collections-path: ${MOLECULE_PROJECT_DIRECTORY}/../community-collections
driver:
  name: podman
platforms:
  - name: idm.osgiliath.test
    image: fedora:38
    dockerfile: ../common/Dockerfile.j2
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: True
    command: "/sbin/init"
    systemd: True
    network: bridge
#    hostname: idm.osgiliath.test
    tmpfs:
      - /run
      - /tmp
    dns_servers:
      - 8.8.8.8
    groups:
      - ipaservers
  - name: client.osgiliath.test
    image: fedora:38
    dockerfile: ../common/Dockerfile.j2
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: True
#    hostname: client.osgiliath.test
    command: "/sbin/init"
    systemd: True
    network: bridge
    tmpfs:
      - /run
      - /tmp
    dns_servers:
      - 8.8.8.8
    groups:
      - ipaclients
provisioner:
  name: ansible
verifier:
  name: testinfra
  env:
    PYTHONWARNINGS: "ignore:.*U.*mode is deprecated:DeprecationWarning"
  options:
    v: 1
scenario:
  name: podman
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy